# NY Anti-Malware / Plugin : Malware - Test

import os

REMOVE = "../Sample/remove"

class NYamMain :
    # ------------------------------------------------------------
    # init()
    # Start NY Anti-Malware's Kernel
    # Input : db_path
    # Output : 0 (Success) / Not 0 (Fail)
    # ------------------------------------------------------------
    def init(self, db_path) :
        self.malware_name = 'Test'
        self.malware_id = 0
        self.malware_size = 108
        self.malware_signature = b'[ Malware ]'

        return 0
    
    # ------------------------------------------------------------
    # uninit()
    # End NY Anti-Malware's Kernel
    # Input : 
    # Output : 0 (Success) / Not 0 (Fail)
    # ------------------------------------------------------------
    def uninit(self) :
        del self.malware_name
        del self.malware_id
        del self.malware_size
        del self.malware_signature

        return 0

    # ------------------------------------------------------------
    # scan()
    # NYAM - Scan Malware
    # Input : 
    #           (1) fileName
    #           (2) fileHandle
    # Output : 
    #           (1) True / False
    #           (2) Malware Name
    #           (3) Malware ID
    # ------------------------------------------------------------
    def scan(self, fileName, fileHandle, debug = False) :        
        try :
            fileSize = os.path.getsize(fileName)
            if debug :
                print(f"[ SIZE ] fileSize : {fileSize}")
                print(f"[ SIZE ] self.malware_size : {self.malware_size}")
            if fileSize == self.malware_size :

                # Malware Scan 1. Signature
                fileBuf = fileHandle.read(len(self.malware_signature))
                if debug :
                    print(f"[ TYPE ] fileBuf : {type(fileBuf)}")
                    print(f">>>> fileBuf : {fileBuf}")
                    print(f"[ TYPE ] self.malware_signature : {type(self.malware_signature)}")
                    print(f">>>> self.malware_signature : {self.malware_signature}")
                if fileBuf == self.malware_signature :
                    return True, self.malware_name, self.malware_id
        
        except IOError :
            pass

        return False, '', -1

    # ------------------------------------------------------------
    # clean()
    # NYAM - Clean Malware
    # Input : 
    #           (1) fileName
    #           (2) in_malware_id
    # Output : True / False
    # ------------------------------------------------------------
    def clean(self, fileName, in_malware_id, debug = False) :
        try :
            if debug :
                print(f"[ TYPE ] in_malware_id : {type(in_malware_id)}")
                print(f">>>> in_malware_id : {in_malware_id}")
                print(f"[ TYPE ] self.malware_id : {type(self.malware_id)}")
                print(f">>>> self.malware_id : {self.malware_id}")
            if in_malware_id == self.malware_id :
                # os.remove(REMOVE)
                return True

        except IOError :
            pass

        return False

    # ------------------------------------------------------------
    # getMalwareList()
    # This Plugin - (Scan / Clean) Malware List
    # Input : 
    # Output : 
    # ------------------------------------------------------------
    def getMalwareList(self) :
        malware_list = list()
        
        malware_list.append(self.malware_name)
        
        return malware_list

    # ------------------------------------------------------------
    # getPluginInformation()
    # This Plugin - Plugin Information
    # Input : 
    # Output : 
    # ------------------------------------------------------------
    def getPluginInformation(self) :
        info = dict()

        info['author'] = 'nlofylob'
        info['project'] = 'Anti-Malware'
        info['version'] = '1.0'
        info['title'] = '[ Test ] Malware Scan Plugin'
        info['ny_name'] = 'test'

        return info
