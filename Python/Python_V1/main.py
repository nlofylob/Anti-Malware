import os
import sys
import hashlib
import zlib
import io

NYDB_PATH = '../../DB/NYDB/'
REMOVE = "../../Sample/remove"

MalwareDB = []
mSize_db = []
m_db = []

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

def DecryptNY(inputFile) :
    try :
        fHandle = open(inputFile, 'rb')
        fBuf = fHandle.read()
        fHandle.close()

        fNY = fBuf[:-32] # Header + Body
        """
        print("%%%%%%%% TEST : (0-1) File - Header + Body %%%%%%%%")
        print(fNY)
        print("File Type : {type}".format(type = type(fNY)))
        print()
        """

        fMD5 = fBuf[-32:] # MD5
        """
        print("%%%%%%%% TEST : (0-2) File - MD5 %%%%%%%%")
        print(fMD5)
        print("File Type : {type}".format(type = type(fMD5)))
        print()
        """

        print("%%%%%%%% TEST : (1) Original (.ny) %%%%%%%%")
        print(">>>>", fNY)
        print("Original (.ny) - File Type : {type}".format(type = type(fNY)))
        print()

        # 1. Check MD5
        fMD5x4 = fNY
        for i in range(4) :
            md5 = hashlib.md5()
            md5.update(fMD5x4)
            fMD5x4 = md5.hexdigest().encode('UTF-8')        
        print("#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#")
        print("File MD5 : {md5}".format(md5 = fMD5x4))
        print("#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#")
        print()

        if fMD5x4 != fMD5 :
            print("[ Attack Detected ] Malware DB - {fileName}".format(fileName = inputFile))
            print("( + ) Detected By MD5")
            raise SystemError
        
        # 2. Decrypt : XOR
        """
        fDecrypted = ''
        for i in fNY[4:] :
            fDecrypted += chr(i ^ 0xFF)
        """
        #"""
        fDecrypted = bytearray([i ^ 0xFF for i in fNY[4:]])
        #"""
        print("%%%%%%%% TEST : (2) Decrypt %%%%%%%%")
        print(fDecrypted)
        print(type(fDecrypted))
        print()

        # 3. Decompress
        fDecompressed = zlib.decompress(fDecrypted)
        print("%%%%%%%% TEST : (3) Decompress %%%%%%%%")
        print(fDecompressed)
        print(type(fDecompressed))
        print()

        result = fDecompressed.decode('UTF-8') # Type Change : from Byte to String

        return result

    except :
        pass

def LoadMalwareDB() :
    ny_name = "malware.ny"
    ny_path = NYDB_PATH + ny_name
    file = DecryptNY(ny_path)
    fHandle = io.StringIO(file)

    while True :
        line = fHandle.readline()
        if not line :
            break
        line = line.strip()
        #print(line)
        MalwareDB.append(line)

    fHandle.close()

def CreateMalwareDB() :
    for pattern in MalwareDB :
        temp = []
        m = pattern.split(':')

        # Malware Size DB
        size = int(m[0])
        if mSize_db.count(size) == 0 :
            mSize_db.append(size)
        
        # Malware DB
        temp.append(m[1]) # Malware's MD5
        temp.append(m[2]) # Malware's Name
        m_db.append(temp)

def SearchMalwareSizeDB(inputSize) :
    if mSize_db.count(inputSize) :
        return True
    
    return False

def SearchMalwareDB(inputMD5) :
    for temp in m_db :
        # MD5
        if inputMD5 == temp[0] :
            return True, temp[1]
    
    return False, ''

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

if __name__ == '__main__' :
    LoadMalwareDB()
    CreateMalwareDB()

    # Command Line
    if len(sys.argv) != 2 :
        print ('How to Use : anti-malware.py [file]')
        exit(0)

    fName = sys.argv[1]

    fSize = os.path.getsize(fName)

    result_sizeDB = SearchMalwareSizeDB(fSize)
    if result_sizeDB == True :

        fHandle = open(fName, 'rb')
        fBuf = fHandle.read()
        fHandle.close()

        md5 = hashlib.md5()
        md5.update(fBuf)
        fMD5 = md5.hexdigest()

        result_DB, mName = SearchMalwareDB(fMD5)
        if result_DB == True :
            print("[ Malware Detected ] {fileName} : {malwareName}".format(fileName = fName, malwareName = mName))
            print("( + ) Detected By MD5")
            #os.remove(REMOVE)
        else :
            print("[ PASS ] {fileName}".format(fileName = fName))
    
    else :
        print("[ PASS ] {fileName}".format(fileName = fName))

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#

"""

# Signature
fileSignature = fileBuf[0:3]

if fileSignature == eicar_SIGNATURE :
    print("Malware - Detected By Signature")
    print(f'Malware Signature : ${fileSignature}')
    #os.remove(REMOVE)
else :
    print("Not Malware")
    print(f'File (Not Malware) Signature : ${fileSignature}')

#print(fileBuf)

"""
