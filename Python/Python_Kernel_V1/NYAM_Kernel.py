# NY Anti-Malware / Kernel

import os
import io

import NY_Encrypt
import NY_Encrypt_RSA as rsa

#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#
# Kernel Class
#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#
class Kernel :
    # ------------------------------------------------------------
    # Input : 
    # Output : 
    # ------------------------------------------------------------
    def __init__(self, debug = False) :
        self.debug = debug

        self.plugins_path = None
        self.nyFile_list = []

    # ------------------------------------------------------------
    # Input : 
    # Output : True / False
    # ------------------------------------------------------------
    def set_plugins(self, plugins_path) :
        self.plugins_path = plugins_path

        public_path = plugins_path + os.sep + 'key.public'
        public = rsa.read_key(public_path)
        if not public :
            print("%%%%%%%% [ ERROR ] %%%%%%%%")
            print(f">>>> Fail to Read RSA Public Key : {public_path}")
            return False
        
        """
        if self.debug :
            print("[ SUCCESS ] Success to Read RSA Public Key")
        """

        nyFile_list_path = plugins_path + os.sep + 'NYAM.ny'
        nyFile_list = self.__get_ny_list(nyFile_list_path, public)
        if not nyFile_list :
            print("%%%%%%%% ERROR %%%%%%%%")
            print(f">>>> Fail to Get NY File List : {nyFile_list_path}")
            return False
        
        """
        if self.debug :
            print("[ SUCCESS ] Success to Get NY File List")
        """

        if self.debug :
            print("[ NY File List ]")
            print(f"    ( + ) : {self.nyFile_list}")
        
        return True

    # ------------------------------------------------------------
    # Input : 
    # Output : True / False
    # ------------------------------------------------------------
    def __get_ny_list(self, ny_file, rsa_public) :
        nyFiles = []

        DE_nyFiles = NY_Encrypt.NY(ny_file, rsa_public)

        if DE_nyFiles.body :
            fBuf = io.StringIO((DE_nyFiles.body).decode('latin-1'))
            
            while True :
                line = fBuf.readline().strip()

                if not line :
                    break
                # This File is .ny File
                elif line.find('.ny') != -1 :
                    nyFiles.append(line)
                # This File is Not .ny File
                else :
                    continue
        
        if len(nyFiles) :
            self.nyFile_list = nyFiles
            return True
        else :
            return False
