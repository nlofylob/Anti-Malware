# Algorithm Test : RSA

import sys
import nyEncrypt_RSA as nyrsa

def encrypt_message(message, public_key_file) :
    public_key = nyrsa.read_key(public_key_file)
    encryptedMessage = nyrsa.crypt(message, public_key)
    return encryptedMessage

def decrypt_message(message, private_key_file) :
    private_key = nyrsa.read_key(private_key_file)
    decryptedMessage = nyrsa.crypt(message, private_key)
    return decryptedMessage

if __name__ == '__main__' :
    public_fName = 'key.publicK'
    private_fName = 'key.privateK'

    if len(sys.argv) == 3 :
        public_fName = sys.argv[1]
        private_fName = sys.argv[2]

    elif len(sys.argv) != 1 :
        print("How to Use : main.py [Public Key File Name] [Private Key File Name]")
        exit(0)

    nyrsa.create_key(public_fName, private_fName, True)

    print()
    message = "[ TEST ] RSA Algorithm"
    print("Message : {m}".format(m = message))

    enMessage = encrypt_message(message, public_fName)
    print("Encrypted Message : {en}".format(en = enMessage))
    deMessage = decrypt_message(enMessage, private_fName)
    print("Decrypted Message : {de}".format(de = deMessage))

    print()
    print("#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#")
    if message == deMessage :
        print("[ RSA Algorithm ] SUCCESS")
    else :
        print("[ RSA Algorithm ] FAIL")
    print("#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#=#")
    print()